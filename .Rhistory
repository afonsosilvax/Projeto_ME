add_generator("Contactos1", contactos, from_to(c(0, 600, 1200, 1800, 2400), c(120, 720, 1320, 1920, 1520), function() rexp(1, 1))) %>%
add_generator("Contactos2", contactos, from_to(c(120, 720, 1320, 1920, 2520), c(480, 1080, 1680, 2280, 2880), function() rexp(1, 2/3))) %>%
add_generator("Contactos3", contactos, from_to(c(480, 1080, 1680, 2280, 2880), c(600, 1200, 1800, 2400, 3000), function() rexp(1, 1/3))) %>%
run(600)
set.seed(2023)
contactos <- trajectory("Gestao_contactos") %>%
branch(tipo_contacto, continue = c(TRUE),
trajectory() %>%
set_prioritization(function() {c(1, -1, FALSE)} ) %>%
renege_in(5, out = trajectory("Rejeita chamada"))) %>%
seize("administrativo") %>%
renege_abort() %>%
set_attribute("tipo_consulta", tempo) %>%
timeout_from_attribute("tipo_consulta") %>%
release("administrativo")
schedule <- schedule(c(60, 90, 240, 450, 600, 660, 690, 840, 1050, 1200, 1260, 1290, 1440, 1650, 1800, 1860, 1890, 2040, 2250, 2400, 2460, 2490, 2640, 2850, 3000), c(1, 2, 4, 3, 1, 1, 2, 4, 3, 1, 1, 2, 4, 3, 1, 1, 2, 4, 3, 1, 1, 2, 4, 3, 1), period = 3000)
env <- simmer("servico") %>%
add_resource("administrativo", capacity = schedule) %>%
add_generator("Contactos1", contactos, from_to(c(0, 600, 1200, 1800, 2400), c(120, 720, 1320, 1920, 1520), function() rexp(1, 1))) %>%
add_generator("Contactos2", contactos, from_to(c(120, 720, 1320, 1920, 2520), c(480, 1080, 1680, 2280, 2880), function() rexp(1, 2/3))) %>%
add_generator("Contactos3", contactos, from_to(c(480, 1080, 1680, 2280, 2880), c(600, 1200, 1800, 2400, 3000), function() rexp(1, 1/3))) %>%
run(3000)
arrivals <- get_mon_arrivals(env)
nrow(arrivals)
arrivals
set.seed(2023)
contactos <- trajectory("Gestao_contactos") %>%
branch(tipo_contacto, continue = c(TRUE),
trajectory() %>%
renege_in(5, out = trajectory("Rejeita chamada"))) %>%
seize("administrativo") %>%
renege_abort() %>%
set_attribute("tipo_consulta", tempo) %>%
timeout_from_attribute("tipo_consulta") %>%
release("administrativo")
env <- simmer("servico") %>%
add_resource("administrativo", 2) %>%
add_generator("Contactos", contactos, chegada_contactos) %>%
run(3000)
arrivals <- get_mon_arrivals(env)
nrow(arrivals)
#importações
#install.packages("simmer.plot")
#install.packages("simmer")
library(simmer)
library(magrittr)
library(simmer.plot)
consulta <- function() {(sample(0:2, 1, replace = T, prob = c(0.30, 0.60, 0.10)))}
# 0-sem consulta, 1-consulta telefónica, 2-consulta presencial
# Funções
chegada_contactos <- function() rexp(1, 2/3)
triagem <- function() rnorm(1, 4, 1)
tomada_decisao <- function() rnorm(1, 1, 0.25)
marcacao_consulta <- function() rnorm(1, 1, 0.25)
tempo <- function() ifelse(consulta() == 0, triagem() + tomada_decisao(), triagem() + tomada_decisao() + marcacao_consulta())
tipo_contacto <- function() sample(0:1, 1, T, prob = c(0.15, 0.85))
set.seed(2023)
contactos <- trajectory("Gestao_contactos") %>%
branch(tipo_contacto, continue = c(TRUE),
trajectory() %>%
renege_in(5, out = trajectory("Rejeita chamada"))) %>%
seize("administrativo") %>%
renege_abort() %>%
set_attribute("tipo_consulta", tempo) %>%
timeout_from_attribute("tipo_consulta") %>%
release("administrativo")
env <- simmer("servico") %>%
add_resource("administrativo", 2) %>%
add_generator("Contactos", contactos, chegada_contactos) %>%
run(3000)
arrivals <- get_mon_arrivals(env)
nrow(arrivals)
#importações
#install.packages("simmer.plot")
#install.packages("simmer")
library(simmer)
library(magrittr)
library(simmer.plot)
consulta <- function() {(sample(0:2, 1, replace = T, prob = c(0.30, 0.60, 0.10)))}
# 0-sem consulta, 1-consulta telefónica, 2-consulta presencial
# Funções
chegada_contactos <- function() rexp(1, 2/3)
triagem <- function() rnorm(1, 4, 1)
tomada_decisao <- function() rnorm(1, 1, 0.25)
marcacao_consulta <- function() rnorm(1, 1, 0.25)
tempo <- function() ifelse(consulta() == 0, triagem() + tomada_decisao(), triagem() + tomada_decisao() + marcacao_consulta())
tipo_contacto <- function() sample(0:1, 1, T, prob = c(0.15, 0.85))
set.seed(2023)
contactos <- trajectory("Gestao_contactos") %>%
branch(tipo_contacto, continue = c(TRUE),
trajectory() %>%
set_prioritization(function() {c(1, -1, FALSE)} ) %>%
renege_in(5, out = trajectory("Rejeita chamada"))) %>%
seize("administrativo") %>%
renege_abort() %>%
set_attribute("tipo_consulta", tempo) %>%
timeout_from_attribute("tipo_consulta") %>%
release("administrativo")
schedule <- schedule(c(60, 90, 240, 450, 600, 660, 690, 840, 1050, 1200, 1260, 1290, 1440, 1650, 1800, 1860, 1890, 2040, 2250, 2400, 2460, 2490, 2640, 2850, 3000), c(1, 2, 4, 3, 1, 1, 2, 4, 3, 1, 1, 2, 4, 3, 1, 1, 2, 4, 3, 1, 1, 2, 4, 3, 1), period = 3000)
env <- simmer("servico") %>%
add_resource("administrativo", capacity = schedule) %>%
add_generator("Contactos1", contactos, from_to(c(0, 600, 1200, 1800, 2400), c(120, 720, 1320, 1920, 1520), function() rexp(1, 1), every = )) %>%
add_generator("Contactos2", contactos, from_to(c(120, 720, 1320, 1920, 2520), c(480, 1080, 1680, 2280, 2880), function() rexp(1, 2/3))) %>%
add_generator("Contactos3", contactos, from_to(c(480, 1080, 1680, 2280, 2880), c(600, 1200, 1800, 2400, 3000), function() rexp(1, 1/3))) %>%
run(3000)
set.seed(2023)
contactos <- trajectory("Gestao_contactos") %>%
branch(tipo_contacto, continue = c(TRUE),
trajectory() %>%
set_prioritization(function() {c(1, -1, FALSE)} ) %>%
renege_in(5, out = trajectory("Rejeita chamada"))) %>%
seize("administrativo") %>%
renege_abort() %>%
set_attribute("tipo_consulta", tempo) %>%
timeout_from_attribute("tipo_consulta") %>%
release("administrativo")
schedule <- schedule(c(60, 90, 240, 450, 600, 660, 690, 840, 1050, 1200, 1260, 1290, 1440, 1650, 1800, 1860, 1890, 2040, 2250, 2400, 2460, 2490, 2640, 2850, 3000), c(1, 2, 4, 3, 1, 1, 2, 4, 3, 1, 1, 2, 4, 3, 1, 1, 2, 4, 3, 1, 1, 2, 4, 3, 1), period = 3000)
env <- simmer("servico") %>%
add_resource("administrativo", capacity = schedule) %>%
add_generator("Contactos1", contactos, from_to(c(0, 600, 1200, 1800, 2400), c(120, 720, 1320, 1920, 1520), function() rexp(1, 1))) %>%
add_generator("Contactos2", contactos, from_to(c(120, 720, 1320, 1920, 2520), c(480, 1080, 1680, 2280, 2880), function() rexp(1, 2/3))) %>%
add_generator("Contactos3", contactos, from_to(c(480, 1080, 1680, 2280, 2880), c(600, 1200, 1800, 2400, 3000), function() rexp(1, 1/3))) %>%
run(3000)
arrivals <- get_mon_arrivals(env)
nrow(arrivals)
arrivals
set.seed(2023)
contactos <- trajectory("Gestao_contactos") %>%
branch(tipo_contacto, continue = c(TRUE),
trajectory() %>%
set_prioritization(function() {c(1, -1, FALSE)} ) %>%
renege_in(5, out = trajectory("Rejeita chamada"))) %>%
seize("administrativo") %>%
renege_abort() %>%
set_attribute("tipo_consulta", tempo) %>%
timeout_from_attribute("tipo_consulta") %>%
release("administrativo")
schedule <- schedule(c(60, 90, 240, 450, 600, 660, 690, 840, 1050, 1200, 1260, 1290, 1440, 1650, 1800, 1860, 1890, 2040, 2250, 2400, 2460, 2490, 2640, 2850, 3000), c(1, 2, 4, 3, 1, 1, 2, 4, 3, 1, 1, 2, 4, 3, 1, 1, 2, 4, 3, 1, 1, 2, 4, 3, 1), period = 3000)
env <- simmer("servico") %>%
add_resource("administrativo", capacity = schedule) %>%
add_generator("Contactos1", contactos, from_to(c(0, 600, 1200, 1800, 2400), c(120, 720, 1320, 1920, 1520), function() rexp(1, 1))) %>%
add_generator("Contactos2", contactos, from_to(c(120, 720, 1320, 1920, 2520), c(480, 1080, 1680, 2280, 2880), function() rexp(1, 2/3))) %>%
add_generator("Contactos3", contactos, from_to(c(480, 1080, 1680, 2280, 2880), c(600, 1200, 1800, 2400, 3000), function() rexp(1, 1/3))) %>%
run(3000)
arrivals <- get_mon_arrivals(env)
nrow(arrivals)
arrivals
set.seed(2023)
contactos <- trajectory("Gestao_contactos") %>%
branch(tipo_contacto, continue = c(TRUE),
trajectory() %>%
set_prioritization(function() {c(1, -1, FALSE)} ) %>%
renege_in(5, out = trajectory("Rejeita chamada"))) %>%
seize("administrativo") %>%
renege_abort() %>%
set_attribute("tipo_consulta", tempo) %>%
timeout_from_attribute("tipo_consulta") %>%
release("administrativo")
schedule <- schedule(c(60, 90, 240, 450, 600, 660, 690, 840, 1050, 1200, 1260, 1290, 1440, 1650, 1800, 1860, 1890, 2040, 2250, 2400, 2460, 2490, 2640, 2850, 3000), c(1, 2, 4, 3, 1, 1, 2, 4, 3, 1, 1, 2, 4, 3, 1, 1, 2, 4, 3, 1, 1, 2, 4, 3, 1), period = 3000)
env <- simmer("servico") %>%
add_resource("administrativo", capacity = schedule) %>%
add_generator("Contactos1", contactos, from_to(0, 120, function() rexp(1, 1), every = 600)) %>%
add_generator("Contactos2", contactos, from_to(c(120, 720, 1320, 1920, 2520), c(480, 1080, 1680, 2280, 2880), function() rexp(1, 2/3))) %>%
add_generator("Contactos3", contactos, from_to(c(480, 1080, 1680, 2280, 2880), c(600, 1200, 1800, 2400, 3000), function() rexp(1, 1/3))) %>%
run(3000)
arrivals <- get_mon_arrivals(env)
nrow(arrivals)
set.seed(2023)
contactos <- trajectory("Gestao_contactos") %>%
branch(tipo_contacto, continue = c(TRUE),
trajectory() %>%
set_prioritization(function() {c(1, -1, FALSE)} ) %>%
renege_in(5, out = trajectory("Rejeita chamada"))) %>%
seize("administrativo") %>%
renege_abort() %>%
set_attribute("tipo_consulta", tempo) %>%
timeout_from_attribute("tipo_consulta") %>%
release("administrativo")
schedule <- schedule(c(60, 90, 240, 450, 600, 660, 690, 840, 1050, 1200, 1260, 1290, 1440, 1650, 1800, 1860, 1890, 2040, 2250, 2400, 2460, 2490, 2640, 2850, 3000), c(1, 2, 4, 3, 1, 1, 2, 4, 3, 1, 1, 2, 4, 3, 1, 1, 2, 4, 3, 1, 1, 2, 4, 3, 1), period = 3000)
env <- simmer("servico") %>%
add_resource("administrativo", capacity = schedule) %>%
add_generator("Contactos1", contactos, from_to(0, 120, function() rexp(1, 1), every = 600)) %>%
add_generator("Contactos2", contactos, from_to(120, 480, function() rexp(1, 2/3), every = 600)) %>%
add_generator("Contactos3", contactos, from_to(480, 600, function() rexp(1, 1/3), every = 600)) %>%
run(3000)
arrivals <- get_mon_arrivals(env)
nrow(arrivals)
envs <- lapply(1:50, function(i) {
simmer("servico") %>%
add_resource("administrativo", capacity = schedule) %>%
add_generator("Contactos1", contactos, from_to(0, 120, function() rexp(1, 1), every = 600)) %>%
add_generator("Contactos2", contactos, from_to(120, 480, function() rexp(1, 2/3), every = 600)) %>%
add_generator("Contactos3", contactos, from_to(480, 600, function() rexp(1, 1/3), every = 600)) %>%
run(3000)
})
arrivals <- get_mon_arrivals(env)
nrow(arrivals)
set.seed(2023)
contactos <- trajectory("Gestao_contactos") %>%
branch(tipo_contacto, continue = c(TRUE),
trajectory() %>%
set_prioritization(function() {c(1, 1, FALSE)} ) %>%
renege_in(5, out = trajectory("Rejeita chamada"))) %>%
seize("administrativo") %>%
renege_abort() %>%
set_attribute("tipo_consulta", tempo) %>%
timeout_from_attribute("tipo_consulta") %>%
release("administrativo")
schedule <- schedule(c(60, 90, 240, 450, 600, 660, 690, 840, 1050, 1200, 1260, 1290, 1440, 1650, 1800, 1860, 1890, 2040, 2250, 2400, 2460, 2490, 2640, 2850, 3000), c(1, 2, 4, 3, 1, 1, 2, 4, 3, 1, 1, 2, 4, 3, 1, 1, 2, 4, 3, 1, 1, 2, 4, 3, 1), period = 3000)
env <- simmer("servico") %>%
add_resource("administrativo", capacity = schedule) %>%
add_generator("Contactos1", contactos, from_to(0, 120, function() rexp(1, 1), every = 600)) %>%
add_generator("Contactos2", contactos, from_to(120, 480, function() rexp(1, 2/3), every = 600)) %>%
add_generator("Contactos3", contactos, from_to(480, 600, function() rexp(1, 1/3), every = 600)) %>%
run(3000)
arrivals <- get_mon_arrivals(env)
nrow(arrivals)
envs <- lapply(1:50, function(i) {
simmer("servico") %>%
add_resource("administrativo", capacity = schedule) %>%
add_generator("Contactos1", contactos, from_to(c(0, 600, 1200, 1800, 2400), c(120, 720, 1320, 1920, 1520), function() rexp(1, 1))) %>%
add_generator("Contactos2", contactos, from_to(c(120, 720, 1320, 1920, 2520), c(480, 1080, 1680, 2280, 2880), function() rexp(1, 2/3))) %>%
add_generator("Contactos3", contactos, from_to(c(480, 1080, 1680, 2280, 2880), c(600, 1200, 1800, 2400, 3000), function() rexp(1, 1/3))) %>%
run(3000)
})
resources <- get_mon_resources(env)
plot(resources, metric = "utilization")
set.seed(2023)
contactos <- trajectory("Gestao_contactos") %>%
branch(tipo_contacto, continue = c(TRUE),
trajectory() %>%
set_prioritization(function() {c(1, -1, FALSE)} ) %>%
renege_in(5, out = trajectory("Rejeita chamada"))) %>%
seize("administrativo") %>%
renege_abort() %>%
set_attribute("tipo_consulta", tempo) %>%
timeout_from_attribute("tipo_consulta") %>%
release("administrativo")
schedule <- schedule(c(60, 90, 240, 450, 600, 660, 690, 840, 1050, 1200, 1260, 1290, 1440, 1650, 1800, 1860, 1890, 2040, 2250, 2400, 2460, 2490, 2640, 2850, 3000), c(1, 2, 4, 3, 1, 1, 2, 4, 3, 1, 1, 2, 4, 3, 1, 1, 2, 4, 3, 1, 1, 2, 4, 3, 1), period = 3000)
env <- simmer("servico") %>%
add_resource("administrativo", capacity = schedule) %>%
add_generator("Contactos1", contactos, from_to(0, 120, function() rexp(1, 1), every = 600)) %>%
add_generator("Contactos2", contactos, from_to(120, 480, function() rexp(1, 2/3), every = 600)) %>%
add_generator("Contactos3", contactos, from_to(480, 600, function() rexp(1, 1/3), every = 600)) %>%
run(3000)
arrivals <- get_mon_arrivals(env)
nrow(arrivals)
envs <- lapply(1:50, function(i) {
simmer("servico") %>%
add_resource("administrativo", capacity = schedule) %>%
add_generator("Contactos1", contactos, from_to(0, 120, function() rexp(1, 1), every = 600)) %>%
add_generator("Contactos2", contactos, from_to(120, 480, function() rexp(1, 2/3), every = 600)) %>%
add_generator("Contactos3", contactos, from_to(480, 600, function() rexp(1, 1/3), every = 600)) %>%
run(3000)
})
arrivals <- get_mon_arrivals(env)
nrow(arrivals)
knitr::opts_chunk$set(echo = TRUE)
#importações
#install.packages("simmer.plot")
#install.packages("simmer")
library(simmer)
library(magrittr)
library(simmer.plot)
consulta <- function() {(sample(0:2, 1, replace = T, prob = c(0.30, 0.60, 0.10)))}
# 0-sem consulta, 1-consulta telefónica, 2-consulta presencial
# Funções
chegada_contactos <- function() rexp(1, 2/3)
triagem <- function() rnorm(1, 4, 1)
tomada_decisao <- function() rnorm(1, 1, 0.25)
marcacao_consulta <- function() rnorm(1, 1, 0.25)
tempo <- function() ifelse(consulta() == 0, triagem() + tomada_decisao(), triagem() + tomada_decisao() + marcacao_consulta())
tipo_contacto <- function() sample(0:1, 1, T, prob = c(0.15, 0.85))
set.seed(2023)
contactos <- trajectory("Gestao_contactos") %>%
branch(tipo_contacto, continue = c(TRUE),
trajectory() %>%
renege_in(5, out = trajectory("Rejeita chamada"))) %>%
seize("administrativo") %>%
renege_abort() %>%
set_attribute("tipo_consulta", tempo) %>%
timeout_from_attribute("tipo_consulta") %>%
release("administrativo")
env <- simmer("servico") %>%
add_resource("administrativo", 2) %>%
add_generator("Contactos", contactos, chegada_contactos) %>%
run(3000)
arrivals <- get_mon_arrivals(env)
nrow(arrivals)
resources <- get_mon_resources(env)
plot(resources, metric = "utilization")
resources <- get_mon_resources(env)
plot(resources, metric = "utilization")
plot(resources, metric = "usage", item = "server")
plot(arrivals, metric = "flow_time")
plot(get_mon_resources(env), metric = "usage", "administrativo", items = "server", steps = TRUE)
plot(resources, metric="usage", c("administrativo"), steps=TRUE)
envs <- lapply(1:50, function(i) {
simmer("servico") %>%
add_resource("administrativo", 2) %>%
add_generator("Contactos", contactos, chegada_contactos) %>%
run(600)
})
arrivals <- get_mon_arrivals(envs)
nrow(arrivals)
resources <- get_mon_resources(envs)
plot(resources, metric = "utilization")
plot(resources, metric = "usage", item = "server")
plot(resources, metric = "usage", item = "server")
plot(arrivals, metric = "flow_time")
plot(get_mon_resources(envs), metric = "usage", "administrativo", items = "server", steps = TRUE)
plot(resources, metric="usage", c("administrativo"), steps=TRUE)
set.seed(2023)
contactos <- trajectory("Gestao_contactos") %>%
branch(tipo_contacto, continue = c(TRUE),
trajectory() %>%
set_prioritization(function() {c(1, -1, FALSE)} ) %>%
renege_in(5, out = trajectory("Rejeita chamada"))) %>%
seize("administrativo") %>%
renege_abort() %>%
set_attribute("tipo_consulta", tempo) %>%
timeout_from_attribute("tipo_consulta") %>%
release("administrativo")
schedule <- schedule(c(60, 90, 240, 450, 600, 660, 690, 840, 1050, 1200, 1260, 1290, 1440, 1650, 1800, 1860, 1890, 2040, 2250, 2400, 2460, 2490, 2640, 2850, 3000), c(1, 2, 4, 3, 1, 1, 2, 4, 3, 1, 1, 2, 4, 3, 1, 1, 2, 4, 3, 1, 1, 2, 4, 3, 1), period = 3000)
env <- simmer("servico") %>%
add_resource("administrativo", capacity = schedule) %>%
add_generator("Contactos1", contactos, from_to(0, 120, function() rexp(1, 1), every = 600)) %>%
add_generator("Contactos2", contactos, from_to(120, 480, function() rexp(1, 2/3), every = 600)) %>%
add_generator("Contactos3", contactos, from_to(480, 600, function() rexp(1, 1/3), every = 600)) %>%
run(3000)
arrivals <- get_mon_arrivals(env)
nrow(arrivals)
resources <- get_mon_resources(env)
plot(resources, metric = "utilization")
plot(resources, metric = "usage", item = "server")
plot(arrivals, metric = "flow_time")
plot(get_mon_resources(env), metric = "usage", "administrativo", items = "server", steps = TRUE)
plot(resources, metric="usage", c("administrativo"), steps=TRUE)
envs <- lapply(1:50, function(i) {
simmer("servico") %>%
add_resource("administrativo", capacity = schedule) %>%
add_generator("Contactos1", contactos, from_to(0, 120, function() rexp(1, 1), every = 600)) %>%
add_generator("Contactos2", contactos, from_to(120, 480, function() rexp(1, 2/3), every = 600)) %>%
add_generator("Contactos3", contactos, from_to(480, 600, function() rexp(1, 1/3), every = 600)) %>%
run(3000)
})
arrivals <- get_mon_arrivals(env)
nrow(arrivals)
resources <- get_mon_resources(env)
plot(resources, metric = "utilization")
plot(resources, metric = "usage", item = "server")
plot(arrivals, metric = "flow_time")
plot(get_mon_resources(env), metric = "usage", "administrativo", items = "server", steps = TRUE)
plot(resources, metric="usage", c("administrativo"), steps=TRUE)
set.seed(2023)
contactos <- trajectory("Gestao_contactos") %>%
branch(tipo_contacto, continue = c(TRUE),
trajectory() %>%
set_prioritization(function() {c(1, 1, FALSE)} ) %>%
renege_in(5, out = trajectory("Rejeita chamada"))) %>%
seize("administrativo") %>%
renege_abort() %>%
set_attribute("tipo_consulta", tempo) %>%
timeout_from_attribute("tipo_consulta") %>%
release("administrativo")
schedule <- schedule(c(60, 90, 240, 450, 600, 660, 690, 840, 1050, 1200, 1260, 1290, 1440, 1650, 1800, 1860, 1890, 2040, 2250, 2400, 2460, 2490, 2640, 2850, 3000), c(1, 2, 4, 3, 1, 1, 2, 4, 3, 1, 1, 2, 4, 3, 1, 1, 2, 4, 3, 1, 1, 2, 4, 3, 1), period = 3000)
env <- simmer("servico") %>%
add_resource("administrativo", capacity = schedule) %>%
add_generator("Contactos1", contactos, from_to(0, 120, function() rexp(1, 1), every = 600)) %>%
add_generator("Contactos2", contactos, from_to(120, 480, function() rexp(1, 2/3), every = 600)) %>%
add_generator("Contactos3", contactos, from_to(480, 600, function() rexp(1, 1/3), every = 600)) %>%
run(3000)
arrivals <- get_mon_arrivals(env)
nrow(arrivals)
resources <- get_mon_resources(env)
plot(resources, metric = "utilization")
knitr::opts_chunk$set(echo = TRUE)
#importações
#install.packages("simmer.plot")
#install.packages("simmer")
library(simmer)
library(magrittr)
library(simmer.plot)
consulta <- function() {(sample(0:2, 1, replace = T, prob = c(0.30, 0.60, 0.10)))}
# 0-sem consulta, 1-consulta telefónica, 2-consulta presencial
# Funções
chegada_contactos <- function() rexp(1, 2/3)
triagem <- function() rnorm(1, 4, 1)
tomada_decisao <- function() rnorm(1, 1, 0.25)
marcacao_consulta <- function() rnorm(1, 1, 0.25)
tempo <- function() ifelse(consulta() == 0, triagem() + tomada_decisao(), triagem() + tomada_decisao() + marcacao_consulta())
tipo_contacto <- function() sample(0:1, 1, T, prob = c(0.15, 0.85))
set.seed(2023)
contactos <- trajectory("Gestao_contactos") %>%
branch(tipo_contacto, continue = c(TRUE),
trajectory() %>%
renege_in(5, out = trajectory("Rejeita chamada"))) %>%
seize("administrativo") %>%
renege_abort() %>%
set_attribute("tipo_consulta", tempo) %>%
timeout_from_attribute("tipo_consulta") %>%
release("administrativo")
env <- simmer("servico") %>%
add_resource("administrativo", 2) %>%
add_generator("Contactos", contactos, chegada_contactos) %>%
run(3000)
arrivals <- get_mon_arrivals(env)
nrow(arrivals)
resources <- get_mon_resources(env)
plot(resources, metric = "utilization")
plot(resources, metric = "usage", item = "server")
plot(arrivals, metric = "flow_time")
plot(get_mon_resources(env), metric = "usage", "administrativo", items = "server", steps = TRUE)
plot(resources, metric="usage", c("administrativo"), steps=TRUE)
envs <- lapply(1:50, function(i) {
simmer("servico") %>%
add_resource("administrativo", 2) %>%
add_generator("Contactos", contactos, chegada_contactos) %>%
run(600)
})
arrivals <- get_mon_arrivals(envs)
nrow(arrivals)
resources <- get_mon_resources(envs)
plot(resources, metric = "utilization")
plot(resources, metric = "usage", item = "server")
plot(arrivals, metric = "flow_time")
plot(get_mon_resources(envs), metric = "usage", "administrativo", items = "server", steps = TRUE)
plot(resources, metric="usage", c("administrativo"), steps=TRUE)
set.seed(2023)
contactos <- trajectory("Gestao_contactos") %>%
branch(tipo_contacto, continue = c(TRUE),
trajectory() %>%
set_prioritization(function() {c(1, -1, FALSE)} ) %>%
renege_in(5, out = trajectory("Rejeita chamada"))) %>%
seize("administrativo") %>%
renege_abort() %>%
set_attribute("tipo_consulta", tempo) %>%
timeout_from_attribute("tipo_consulta") %>%
release("administrativo")
schedule <- schedule(c(60, 90, 240, 450, 600, 660, 690, 840, 1050, 1200, 1260, 1290, 1440, 1650, 1800, 1860, 1890, 2040, 2250, 2400, 2460, 2490, 2640, 2850, 3000), c(1, 2, 4, 3, 1, 1, 2, 4, 3, 1, 1, 2, 4, 3, 1, 1, 2, 4, 3, 1, 1, 2, 4, 3, 1), period = 3000)
env <- simmer("servico") %>%
add_resource("administrativo", capacity = schedule) %>%
add_generator("Contactos1", contactos, from_to(0, 120, function() rexp(1, 1), every = 600)) %>%
add_generator("Contactos2", contactos, from_to(120, 480, function() rexp(1, 2/3), every = 600)) %>%
add_generator("Contactos3", contactos, from_to(480, 600, function() rexp(1, 1/3), every = 600)) %>%
run(3000)
arrivals <- get_mon_arrivals(env)
nrow(arrivals)
resources <- get_mon_resources(env)
plot(resources, metric = "utilization")
plot(resources, metric = "usage", item = "server")
plot(arrivals, metric = "flow_time")
plot(get_mon_resources(env), metric = "usage", "administrativo", items = "server", steps = TRUE)
plot(resources, metric="usage", c("administrativo"), steps=TRUE)
envs <- lapply(1:50, function(i) {
simmer("servico") %>%
add_resource("administrativo", capacity = schedule) %>%
add_generator("Contactos1", contactos, from_to(0, 120, function() rexp(1, 1), every = 600)) %>%
add_generator("Contactos2", contactos, from_to(120, 480, function() rexp(1, 2/3), every = 600)) %>%
add_generator("Contactos3", contactos, from_to(480, 600, function() rexp(1, 1/3), every = 600)) %>%
run(3000)
})
arrivals <- get_mon_arrivals(env)
nrow(arrivals)
resources <- get_mon_resources(env)
plot(resources, metric = "utilization")
plot(resources, metric = "usage", item = "server")
plot(arrivals, metric = "flow_time")
plot(get_mon_resources(env), metric = "usage", "administrativo", items = "server", steps = TRUE)
plot(resources, metric="usage", c("administrativo"), steps=TRUE)
set.seed(2023)
contactos <- trajectory("Gestao_contactos") %>%
branch(tipo_contacto, continue = c(TRUE),
trajectory() %>%
set_prioritization(function() {c(1, 1, FALSE)} ) %>%
renege_in(5, out = trajectory("Rejeita chamada"))) %>%
seize("administrativo") %>%
renege_abort() %>%
set_attribute("tipo_consulta", tempo) %>%
timeout_from_attribute("tipo_consulta") %>%
release("administrativo")
schedule <- schedule(c(60, 90, 240, 450, 600, 660, 690, 840, 1050, 1200, 1260, 1290, 1440, 1650, 1800, 1860, 1890, 2040, 2250, 2400, 2460, 2490, 2640, 2850, 3000), c(1, 2, 4, 3, 1, 1, 2, 4, 3, 1, 1, 2, 4, 3, 1, 1, 2, 4, 3, 1, 1, 2, 4, 3, 1), period = 3000)
env <- simmer("servico") %>%
add_resource("administrativo", capacity = schedule) %>%
add_generator("Contactos1", contactos, from_to(0, 120, function() rexp(1, 1), every = 600)) %>%
add_generator("Contactos2", contactos, from_to(120, 480, function() rexp(1, 2/3), every = 600)) %>%
add_generator("Contactos3", contactos, from_to(480, 600, function() rexp(1, 1/3), every = 600)) %>%
run(3000)
arrivals <- get_mon_arrivals(env)
nrow(arrivals)
resources <- get_mon_resources(env)
plot(resources, metric = "utilization")
plot(resources, metric = "usage", item = "server")
plot(arrivals, metric = "flow_time")
plot(get_mon_resources(env), metric = "usage", "administrativo", items = "server", steps = TRUE)
plot(resources, metric="usage", c("administrativo"), steps=TRUE)
envs <- lapply(1:50, function(i) {
simmer("servico") %>%
add_resource("administrativo", capacity = schedule) %>%
add_generator("Contactos1", contactos, from_to(0, 120, function() rexp(1, 1), every = 600)) %>%
add_generator("Contactos2", contactos, from_to(120, 480, function() rexp(1, 2/3), every = 600)) %>%
add_generator("Contactos3", contactos, from_to(480, 600, function() rexp(1, 1/3), every = 600)) %>%
run(3000)
})
arrivals <- get_mon_arrivals(env)
nrow(arrivals)
resources <- get_mon_resources(env)
plot(resources, metric = "utilization")
plot(resources, metric = "usage", item = "server")
plot(arrivals, metric = "flow_time")
plot(get_mon_resources(env), metric = "usage", "administrativo", items = "server", steps = TRUE)
plot(resources, metric="usage", c("administrativo"), steps=TRUE)
